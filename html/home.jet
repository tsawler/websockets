<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">

    <style>
        .chatBox {
            padding: 0.5em;
            outline: 1px solid silver;
            min-height: 150px;
        }
    </style>
    <title>Home</title>
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="mt-3">Home page</h1>
            <hr>

                <div class="form-group">
                    <label for="username">Username:</label>
                    <input class="form-control" type="text" name="username" id="username" autocomplete="off">
                </div>

                <div class="form-group mt-2">
                    <label for="message">Message:</label>
                    <input class="form-control" type="text" name="message" id="message" autocomplete="off">
                </div>
                <hr>
                <a href="javascript:void(0);" id="sendBtn" class="btn btn-outline-secondary">Send message</a>


            <div id="output" class="chatBox mt-5">

            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
        crossorigin="anonymous"></script>

<script src="https://unpkg.com/notie"></script>

<script>
    let socket = new WebSocket("ws://127.0.0.1:8080/ws");
    let o = document.getElementById("output")

    document.getElementById("sendBtn").addEventListener("click", function(){
        sendMessage()
    })

    document.getElementById("message").addEventListener("keydown", function(event){
        if (event.code === "Enter") {
            event.preventDefault();
            event.stopPropagation();
            sendMessage();
        }
    })

    function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast";
        let msg = document.getElementById("message");
        let user = document.getElementById("username");
        if ((msg.value !== "") && (user.value !== "")) {
            jsonData["username"] = document.getElementById("username").value;
            jsonData["message"] = document.getElementById("message").value;
            socket.send(JSON.stringify(jsonData));
            msg.value = "";
        } else {
            notify("You must specify a username & message!", "error");
        }
    }

    socket.onopen = () => {
        console.log("Successfully Connected");
        o.innerHTML = o.innerHTML + "<small><span class='text-success'>"
            + "Connected to server!"
            + "</span></small>"
            + "<br>";
    };

    socket.onclose = event => {
        socket.send("Client Closed!");
        o.innerHTML = o.innerHTML + "<span class='text-danger'>"
            + "Connection closed!"
            + "</span>"
            + "<br>";
    };

    socket.onerror = error => {
        console.log("Error:", error);
        o.innerHTML = o.innerHTML + "<span class='text-danger'>"
            + "Connection error!"
            + "</span>"
            + "<br>";
    };

    socket.onmessage = msg => {
        let data = JSON.parse(msg.data);

        switch(data.action) {
            case "broadcast":
                o.innerHTML = o.innerHTML + data.message + "<br>";
                break;
            case "alert":
                notify(data.message, data.message_type);
                break;
        }
    }


    // handle posting alerts
    function notify(msg, msgType) {
        notie.alert({
            type: msgType,
            text: msg,
        })
    }

</script>

</body>
</html>